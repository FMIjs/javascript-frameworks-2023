{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nexport class UserListResolver {\n  constructor(userService) {\n    this.userService = userService;\n  }\n  resolve(route, state) {\n    return this.userService.loadUsers();\n  }\n}\nUserListResolver.ɵfac = function UserListResolver_Factory(t) {\n  return new (t || UserListResolver)(i0.ɵɵinject(i1.UserService));\n};\nUserListResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserListResolver,\n  factory: UserListResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAEhDC,OAAOA,CACLC,KAA6B,EAC7BC,KAA0B;IAE1B,OAAO,IAAI,CAACH,WAAW,CAACI,SAAS,EAAE;EACrC;;AATWN,gBAAgB;mBAAhBA,gBAAgB,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAhBV,gBAAgB;SAAhBA,gBAAgB;EAAAW,OAAA,EAAhBX,gBAAgB,CAAAY,IAAA;EAAAC,UAAA,EADH;AAAM","names":["UserListResolver","constructor","userService","resolve","route","state","loadUsers","i0","ɵɵinject","i1","UserService","factory","ɵfac","providedIn"],"sourceRoot":"","sources":["/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/user/resolvers/user-list.resolve.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { IUser, UserService } from '../user.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserListResolver implements Resolve<IUser[]> {\n\n  constructor(private userService: UserService) { }\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<IUser[]> | Promise<IUser[]> | IUser[] {\n    return this.userService.loadUsers();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}