{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UnderlineDirective {\n  // @Input() set appUnderline(hasUnderline: boolean) {\n  //   const el = (this.elementRef.nativeElement as HTMLElement);\n  //   if (hasUnderline) {\n  //     el.style.textDecoration = 'underline';\n  //   } else {\n  //     el.style.textDecoration = 'none';\n  //   }\n  // }\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.appUnderline = false;\n    console.log('underline was created', this.elementRef);\n  }\n  ngOnInit() {}\n  ngOnChanges(changes) {\n    console.log('ngOnChanges', changes);\n    const el = this.elementRef.nativeElement;\n    if (this.appUnderline) {\n      el.style.textDecoration = 'underline';\n    } else {\n      el.style.textDecoration = 'none';\n    }\n  }\n  ngDoCheck() {\n    console.log('ngDoCheck');\n  }\n  ngOnDestroy() {}\n}\nUnderlineDirective.ɵfac = function UnderlineDirective_Factory(t) {\n  return new (t || UnderlineDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nUnderlineDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: UnderlineDirective,\n  selectors: [[\"\", \"appUnderline\", \"\"]],\n  inputs: {\n    appUnderline: \"appUnderline\"\n  },\n  exportAs: [\"underline\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAG7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAVrB,KAAAC,YAAY,GAAY,KAAK;IAWpCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACH,UAAU,CAAC;EACvD;EAEAI,QAAQA,CAAA,GAER;EAEAC,WAAWA,CAACC,OAAsB;IAChCJ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEG,OAAO,CAAC;IACnC,MAAMC,EAAE,GAAI,IAAI,CAACP,UAAU,CAACQ,aAA6B;IACzD,IAAI,IAAI,CAACP,YAAY,EAAE;MACrBM,EAAE,CAACE,KAAK,CAACC,cAAc,GAAG,WAAW;KACtC,MAAM;MACLH,EAAE,CAACE,KAAK,CAACC,cAAc,GAAG,MAAM;;EAEpC;EAEAC,SAASA,CAAA;IACPT,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAC1B;EAEAS,WAAWA,CAAA,GAEX;;AApCWd,kBAAkB;mBAAlBA,kBAAkB,EAAAe,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;AAAA;AAAlBjB,kBAAkB;QAAlBA,kBAAkB;EAAAkB,SAAA;EAAAC,MAAA;IAAAhB,YAAA;EAAA;EAAAiB,QAAA;EAAAC,QAAA,GAAAN,EAAA,CAAAO,oBAAA;AAAA","names":["UnderlineDirective","constructor","elementRef","appUnderline","console","log","ngOnInit","ngOnChanges","changes","el","nativeElement","style","textDecoration","ngDoCheck","ngOnDestroy","i0","ɵɵdirectiveInject","ElementRef","selectors","inputs","exportAs","features","ɵɵNgOnChangesFeature"],"sourceRoot":"","sources":["/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/shared/underline.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Input, SimpleChange, SimpleChanges } from '@angular/core';\n\n@Directive({\n  selector: '[appUnderline]',\n  exportAs: 'underline'\n})\nexport class UnderlineDirective {\n\n  @Input() appUnderline: boolean = false;\n  // @Input() set appUnderline(hasUnderline: boolean) {\n  //   const el = (this.elementRef.nativeElement as HTMLElement);\n  //   if (hasUnderline) {\n  //     el.style.textDecoration = 'underline';\n  //   } else {\n  //     el.style.textDecoration = 'none';\n  //   }\n  // }\n\n  constructor(private elementRef: ElementRef) {\n    console.log('underline was created', this.elementRef);\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('ngOnChanges', changes);\n    const el = (this.elementRef.nativeElement as HTMLElement);\n    if (this.appUnderline) {\n      el.style.textDecoration = 'underline';\n    } else {\n      el.style.textDecoration = 'none';\n    }\n  }\n\n  ngDoCheck() {\n    console.log('ngDoCheck');\n  }\n\n  ngOnDestroy() {\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}