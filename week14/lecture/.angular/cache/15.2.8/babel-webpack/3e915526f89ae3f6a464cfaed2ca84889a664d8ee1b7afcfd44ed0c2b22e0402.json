{"ast":null,"code":"import { take, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nexport class AuthActivate {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n  canActivate(route, state) {\n    const noAuthenticationRequired = route.data['authenticationRequired'] === false;\n    return this.authService.user$.pipe(take(1), map(user => {\n      if (noAuthenticationRequired) {\n        return !!user ? this.router.parseUrl('/home') // false\n        : true;\n      }\n      return !!user ? true : this.router.parseUrl('/login'); // false\n    }));\n  }\n}\n\nAuthActivate.ɵfac = function AuthActivate_Factory(t) {\n  return new (t || AuthActivate)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n};\nAuthActivate.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthActivate,\n  factory: AuthActivate.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,IAAI,EAAEC,GAAG,QAAQ,gBAAgB;;;;AAI1C,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;EAAiB;EAExEC,WAAWA,CACTC,KAA6B,EAAEC,KAA0B;IAEzD,MAAMC,wBAAwB,GAAGF,KAAK,CAACG,IAAI,CAAC,wBAAwB,CAAC,KAAK,KAAK;IAE/E,OAAO,IAAI,CAACL,WAAW,CAACM,KAAK,CAACC,IAAI,CAChCZ,IAAI,CAAC,CAAC,CAAC,EACPC,GAAG,CAACY,IAAI,IAAG;MACT,IAAIJ,wBAAwB,EAAE;QAC5B,OAAO,CAAC,CAACI,IAAI,GACT,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,OAAO,CAAC,CAAC;QAAA,EAC9B,IAAI;;MAGV,OAAO,CAAC,CAACD,IAAI,GACT,IAAI,GACJ,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEtC,CAAC,CAAC,CACH;EAEH;;;AAzBWZ,YAAY;mBAAZA,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;AAAZlB,YAAY;SAAZA,YAAY;EAAAmB,OAAA,EAAZnB,YAAY,CAAAoB,IAAA;EAAAC,UAAA,EADC;AAAM","names":["take","map","AuthActivate","constructor","router","authService","canActivate","route","state","noAuthenticationRequired","data","user$","pipe","user","parseUrl","i0","ɵɵinject","i1","Router","i2","AuthService","factory","ɵfac","providedIn"],"sourceRoot":"","sources":["/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/guards/auth.activate.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthActivate implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot\n  ): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    const noAuthenticationRequired = route.data['authenticationRequired'] === false;\n\n    return this.authService.user$.pipe(\n      take(1),\n      map(user => {\n        if (noAuthenticationRequired) {\n          return !!user\n            ? this.router.parseUrl('/home') // false\n            : true;\n        }\n    \n        return !!user\n          ? true\n          : this.router.parseUrl('/login'); // false\n\n      })\n    );\n\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}