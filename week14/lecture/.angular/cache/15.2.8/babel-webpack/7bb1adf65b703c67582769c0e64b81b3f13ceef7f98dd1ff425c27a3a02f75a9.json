{"ast":null,"code":"import { NG_VALIDATORS } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport function containsValidator(value) {\n  return control => {\n    if (control.value?.includes(value)) {\n      return null;\n    }\n    return {\n      mustContain: value\n    };\n  };\n}\nexport class ContainsDirective {\n  constructor() {\n    console.log('appContains');\n  }\n  validate(control) {\n    return containsValidator(this.appContains)(control);\n  }\n}\nContainsDirective.ɵfac = function ContainsDirective_Factory(t) {\n  return new (t || ContainsDirective)();\n};\nContainsDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: ContainsDirective,\n  selectors: [[\"\", \"ngModel\", \"\", \"appContains\", \"\"]],\n  inputs: {\n    appContains: \"appContains\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALIDATORS,\n    useExisting: ContainsDirective,\n    multi: true\n  }])]\n});","map":{"version":3,"mappings":"AACA,SAA0BA,aAAa,QAAqC,gBAAgB;;AAE5F,OAAM,SAAUC,iBAAiBA,CAACC,KAAa;EAC7C,OAAQC,OAAkC,IAA6B;IACrE,IAAKA,OAAO,CAACD,KAAuB,EAAEE,QAAQ,CAACF,KAAK,CAAC,EAAE;MAAE,OAAO,IAAI;;IACpE,OAAO;MAAEG,WAAW,EAAEH;IAAK,CAAE;EAC/B,CAAC;AACH;AAYA,OAAM,MAAOI,iBAAiB;EAG5BC,YAAA;IACEC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B;EAEAC,QAAQA,CAACP,OAAkC;IACzC,OAAOF,iBAAiB,CAAC,IAAI,CAACU,WAAW,CAAC,CAACR,OAAO,CAAC;EACrD;;AATWG,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAM,SAAA;EAAAC,MAAA;IAAAF,WAAA;EAAA;EAAAG,QAAA,GAAAC,EAAA,CAAAC,kBAAA,CARjB,CACT;IACEC,OAAO,EAAEjB,aAAa;IACtBkB,WAAW,EAAEZ,iBAAiB;IAC9Ba,KAAK,EAAE;GACR,CACF;AAAA","names":["NG_VALIDATORS","containsValidator","value","control","includes","mustContain","ContainsDirective","constructor","console","log","validate","appContains","selectors","inputs","features","i0","ɵɵProvidersFeature","provide","useExisting","multi"],"sourceRoot":"","sources":["/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/shared/contains.directive.ts"],"sourcesContent":["import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\nexport function containsValidator(value: string) {\n  return (control: AbstractControl<any, any>): ValidationErrors | null => {\n    if ((control.value as string | null)?.includes(value)) { return null; }\n    return { mustContain: value };\n  };\n}\n\n@Directive({\n  selector: '[ngModel][appContains]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: ContainsDirective,\n      multi: true\n    }\n  ]\n})\nexport class ContainsDirective implements Validator {\n\n  @Input() appContains!: string;\n  constructor() {\n    console.log('appContains');\n  }\n\n  validate(control: AbstractControl<any, any>): ValidationErrors | null {\n    return containsValidator(this.appContains)(control);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}