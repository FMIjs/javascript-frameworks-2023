{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UserListResolver {\n  resolve(route, state) {\n    debugger;\n    return [];\n  }\n}\nUserListResolver.ɵfac = function UserListResolver_Factory(t) {\n  return new (t || UserListResolver)();\n};\nUserListResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserListResolver,\n  factory: UserListResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,gBAAgB;EAC3BC,OAAOA,CACLC,KAA6B,EAC7BC,KAA0B;IAE1B;IACA,OAAO,EAAE;EACX;;AAPWH,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAI,OAAA,EAAhBJ,gBAAgB,CAAAK,IAAA;EAAAC,UAAA,EADH;AAAM","names":["UserListResolver","resolve","route","state","factory","ɵfac","providedIn"],"sourceRoot":"","sources":["/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/user/resolvers/user-list.resolve.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { IUser } from '../user.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserListResolver implements Resolve<IUser[]> {\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<IUser[]> | Promise<IUser[]> | IUser[] {\n    debugger;\n    return []\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}