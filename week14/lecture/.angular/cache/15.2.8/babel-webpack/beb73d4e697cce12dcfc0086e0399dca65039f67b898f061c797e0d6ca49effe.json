{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../user-group-names.pipe\";\nconst _c0 = [\"myDiv\"];\nconst _c1 = [\"myInput\"];\nfunction DetailComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const gName_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(gName_r1);\n  }\n}\nconst _c2 = [\"*\"];\nexport class DetailComponent {\n  constructor() {\n    this.newUser = new EventEmitter();\n  }\n  ngAfterViewInit() {\n    console.log('View was created', this.myInput);\n  }\n  // getUserGroupNames(user: any) {\n  //   return user.groups.map((g: any) => g.name);\n  // }\n  handler($event) {\n    this.newUser.emit($event);\n  }\n  ngAfterContentInit() {\n    console.log('Content was created', this.myDiv);\n  }\n}\nDetailComponent.ɵfac = function DetailComponent_Factory(t) {\n  return new (t || DetailComponent)();\n};\nDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DetailComponent,\n  selectors: [[\"app-detail\"]],\n  contentQueries: function DetailComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myDiv = _t.first);\n    }\n  },\n  viewQuery: function DetailComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myInput = _t.first);\n    }\n  },\n  inputs: {\n    user: \"user\"\n  },\n  outputs: {\n    newUser: \"newUser\"\n  },\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 6,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function DetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, DetailComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵpipe(1, \"userGroupNames\");\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"json\");\n      i0.ɵɵprojection(4);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(1, 2, ctx.user));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 4, ctx.user), \"\\n\");\n    }\n  },\n  dependencies: [i1.NgForOf, i1.JsonPipe, i2.UserGroupNamesPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci9kZXRhaWwvZGV0YWlsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvS0FBb0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA6DA,YAAY,QAAkC,eAAe;;;;;;;;ICA1HC,EAAA,CAAAC,cAAA,UAAmD;IAAAD,EAAA,CAAAE,MAAA,GAAS;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAfH,EAAA,CAAAI,SAAA,GAAS;IAATJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAS;;;;ADO5D,OAAM,MAAOC,eAAe;EAL5BC,YAAA;IAOY,KAAAC,OAAO,GAAG,IAAIV,YAAY,EAAU;;EAI9CW,eAAeA,CAAA;IACbC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACC,OAAO,CAAC;EAC/C;EAEA;EACA;EACA;EAEAC,OAAOA,CAACC,MAAW;IACjB,IAAI,CAACN,OAAO,CAACO,IAAI,CAACD,MAAM,CAAC;EAC3B;EAEAE,kBAAkBA,CAAA;IAChBN,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACM,KAAK,CAAC;EAChD;;AApBWX,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAY,SAAA;EAAAC,cAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA,EAAAC,QAAA;IAAA,IAAAF,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCP5BtB,EAAA,CAAAyB,UAAA,IAAAC,8BAAA,iBAAkE;;MAElE1B,EAAA,CAAAE,MAAA,GACA;;MAAAF,EAAA,CAAA2B,YAAA,GAAyB;;;MAHF3B,EAAA,CAAA4B,UAAA,YAAA5B,EAAA,CAAA6B,WAAA,OAAAN,GAAA,CAAAO,IAAA,EAA0B;MAEjD9B,EAAA,CAAAI,SAAA,GACA;MADAJ,EAAA,CAAA+B,kBAAA,MAAA/B,EAAA,CAAA6B,WAAA,OAAAN,GAAA,CAAAO,IAAA,QACA","names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","gName_r1","DetailComponent","constructor","newUser","ngAfterViewInit","console","log","myInput","handler","$event","emit","ngAfterContentInit","myDiv","selectors","contentQueries","DetailComponent_ContentQueries","rf","ctx","dirIndex","ɵɵtemplate","DetailComponent_div_0_Template","ɵɵprojection","ɵɵproperty","ɵɵpipeBind1","user","ɵɵtextInterpolate1"],"sourceRoot":"","sources":["/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/user/detail/detail.component.ts","/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/user/detail/detail.component.html"],"sourcesContent":["import { AfterViewInit, Component, ContentChild, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements AfterViewInit {\n  @Input() user: any;\n  @Output() newUser = new EventEmitter<string>();\n  @ViewChild('myInput') myInput!: ElementRef<HTMLInputElement>;\n  @ContentChild('myDiv') myDiv!: ElementRef<HTMLInputElement>;\n\n  ngAfterViewInit() {\n    console.log('View was created', this.myInput);\n  }\n\n  // getUserGroupNames(user: any) {\n  //   return user.groups.map((g: any) => g.name);\n  // }\n\n  handler($event: any) {\n    this.newUser.emit($event);\n  }\n\n  ngAfterContentInit() {\n    console.log('Content was created', this.myDiv);\n  }\n}\n","<div *ngFor=\"let gName of (user | userGroupNames)\">{{gName}}</div>\n\n{{user | json}}\n<ng-content></ng-content>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}