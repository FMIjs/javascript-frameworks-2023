{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { containsValidator } from 'src/app/shared/contains.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction NewReactiveComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"This field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewReactiveComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const minlength_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"Min length is \", minlength_r4.requiredLength, \" and the current length is \", minlength_r4.actualLength, \"\");\n  }\n}\nfunction NewReactiveComponent_div_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const mustContainError_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Field must contain \", mustContainError_r5, \" \");\n  }\n}\nfunction NewReactiveComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, NewReactiveComponent_div_5_div_1_Template, 2, 0, \"div\", 4);\n    i0.ɵɵtemplate(2, NewReactiveComponent_div_5_div_2_Template, 2, 2, \"div\", 4);\n    i0.ɵɵtemplate(3, NewReactiveComponent_div_5_div_3_Template, 2, 1, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.getFormControl(\"name\").getError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.getFormControl(\"name\").getError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.getFormControl(\"name\").getError(\"mustContain\"));\n  }\n}\nexport class NewReactiveComponent {\n  constructor() {\n    this.formBuilder = inject(FormBuilder);\n    this.form = this.formBuilder.group({\n      // [value, [syncValidators], [asyncValidators]]\n      name: ['', [Validators.required, Validators.minLength(4), containsValidator('@')], []],\n      age: ['', [Validators.required], []]\n      // address: this.formBuilder.array([])\n    });\n  }\n\n  getFormControl(name) {\n    return this.form.controls[name];\n  }\n  submitFormHandler() {\n    console.log(this.form.value);\n  }\n}\nNewReactiveComponent.ɵfac = function NewReactiveComponent_Factory(t) {\n  return new (t || NewReactiveComponent)();\n};\nNewReactiveComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewReactiveComponent,\n  selectors: [[\"app-new-reactive\"]],\n  decls: 14,\n  vars: 7,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"input-group\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"name\", \"name\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"for\", \"age\"], [\"id\", \"age\", \"type\", \"text\", \"name\", \"age\", 3, \"formControl\"], [3, \"disabled\"]],\n  template: function NewReactiveComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function NewReactiveComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submitFormHandler();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵtemplate(5, NewReactiveComponent_div_5_Template, 4, 3, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Age\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵtext(11, \"Save\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(12);\n      i0.ɵɵpipe(13, \"json\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.getFormControl(\"name\").touched && ctx.getFormControl(\"name\").invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.getFormControl(\"age\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 5, ctx.form.value), \"\");\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormControlDirective, i2.FormGroupDirective, i2.FormControlName, i1.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuZXctcmVhY3RpdmUuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci9uZXctcmVhY3RpdmUvbmV3LXJlYWN0aXZlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSw0S0FBNEsiLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["inject","FormBuilder","Validators","containsValidator","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","minlength_r4","requiredLength","actualLength","ɵɵtextInterpolate1","mustContainError_r5","ɵɵtemplate","NewReactiveComponent_div_5_div_1_Template","NewReactiveComponent_div_5_div_2_Template","NewReactiveComponent_div_5_div_3_Template","ɵɵproperty","ctx_r0","getFormControl","getError","NewReactiveComponent","constructor","formBuilder","form","group","name","required","minLength","age","controls","submitFormHandler","console","log","value","selectors","decls","vars","consts","template","NewReactiveComponent_Template","rf","ctx","ɵɵlistener","NewReactiveComponent_Template_form_ngSubmit_0_listener","ɵɵelement","NewReactiveComponent_div_5_Template","touched","invalid","ɵɵpipeBind1"],"sourceRoot":"","sources":["/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/user/new-reactive/new-reactive.component.ts","/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/user/new-reactive/new-reactive.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { containsValidator } from 'src/app/shared/contains.directive';\n\n@Component({\n  selector: 'app-new-reactive',\n  templateUrl: './new-reactive.component.html',\n  styleUrls: ['./new-reactive.component.scss']\n})\nexport class NewReactiveComponent {\n  formBuilder = inject(FormBuilder);\n  form = this.formBuilder.group({\n    // [value, [syncValidators], [asyncValidators]]\n    name: ['', [Validators.required, Validators.minLength(4), containsValidator('@')], []],\n    age: ['', [Validators.required], []],\n    // address: this.formBuilder.array([])\n  });\n\n  getFormControl(name: keyof typeof this.form.controls) {\n    return this.form.controls[name];\n  }\n\n  submitFormHandler(): void {\n    console.log(this.form.value);\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"submitFormHandler()\">\n  <div class=\"input-group\">\n    <label for=\"name\">Name</label>\n    <input id=\"name\" type=\"text\" name=\"name\" formControlName=\"name\">\n    <div *ngIf=\"getFormControl('name').touched && getFormControl('name').invalid\">\n      <div *ngIf=\"getFormControl('name').getError('required')\">This field is required</div>\n      <div *ngIf=\"getFormControl('name').getError('minlength'); let minlength\">Min length is\n        {{minlength.requiredLength}} and the\n        current length is {{minlength.actualLength}}</div>\n      <div *ngIf=\"getFormControl('name').getError('mustContain'); let mustContainError;\">Field must contain\n        {{mustContainError}}\n      </div>\n    </div>\n  </div>\n  <div class=\"input-group\">\n    <label for=\"age\">Age</label>\n    <!-- two way data binding can be skipped in general -->\n    <input id=\"age\" type=\"text\" name=\"age\" [formControl]=\"getFormControl('age')\">\n  </div>\n  <button [disabled]=\"form.invalid\">Save</button>\n</form>\n\n{{form.value | json}}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}