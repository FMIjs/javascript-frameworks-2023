{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction AppComponent_nav_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nav\")(1, \"div\", 1)(2, \"a\", 2);\n    i0.ɵɵtext(3, \"Home\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 3);\n    i0.ɵɵtext(5, \"About\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 4);\n    i0.ɵɵtext(7, \"User\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 5)(9, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function AppComponent_nav_0_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.logout());\n    });\n    i0.ɵɵtext(10, \"Logout\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class AppComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.hasLoggedUser$ = this.authService.user$.pipe(map(user => !!user));\n  }\n  logout() {\n    this.authService.logout();\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [1, \"routes\"], [\"routerLink\", \"/home\"], [\"routerLink\", \"/about\"], [\"routerLink\", \"/user\"], [1, \"user-controls\"], [3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AppComponent_nav_0_Template, 11, 0, \"nav\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵelement(2, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.hasLoggedUser$));\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterOutlet, i3.RouterLink, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxnS0FBZ0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;;;;;;ICHpCC,EAAA,CAAAC,cAAA,UAAoC;IAEVD,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC9BH,EAAA,CAAAC,cAAA,WAAuB;IAAAD,EAAA,CAAAE,MAAA,YAAK;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAChCH,EAAA,CAAAC,cAAA,WAAsB;IAAAD,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAEhCH,EAAA,CAAAC,cAAA,aAA2B;IACjBD,EAAA,CAAAI,UAAA,mBAAAC,oDAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAR,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAF,MAAA,CAAAG,MAAA,EAAQ;IAAA,EAAC;IAACX,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;ADG9C,OAAM,MAAOS,YAAY;EAIvBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,cAAc,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAACC,IAAI,CAAClB,GAAG,CAACmB,IAAI,IAAI,CAAC,CAACA,IAAI,CAAC,CAAC;EAEjB;EAEhDP,MAAMA,CAAA;IACJ,IAAI,CAACG,WAAW,CAACH,MAAM,EAAE;EAC3B;;AARWC,YAAY;mBAAZA,YAAY,EAAAZ,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAZT,YAAY;QAAZA,YAAY;EAAAU,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVzB5B,EAAA,CAAA8B,UAAA,IAAAC,2BAAA,kBASM;;MACN/B,EAAA,CAAAgC,SAAA,oBAA+B;;;MAVzBhC,EAAA,CAAAiC,UAAA,SAAAjC,EAAA,CAAAkC,WAAA,OAAAL,GAAA,CAAAd,cAAA,EAA4B","names":["map","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_nav_0_Template_button_click_9_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","logout","AppComponent","constructor","authService","hasLoggedUser$","user$","pipe","user","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_nav_0_Template","ɵɵelement","ɵɵproperty","ɵɵpipeBind1"],"sourceRoot":"","sources":["/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/app.component.ts","/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  hasLoggedUser$ = this.authService.user$.pipe(map(user => !!user));\n\n  constructor(private authService: AuthService) { }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}\n","<nav *ngIf=\"hasLoggedUser$ | async\">\n  <div class=\"routes\">\n    <a routerLink=\"/home\">Home</a>\n    <a routerLink=\"/about\">About</a>\n    <a routerLink=\"/user\">User</a>\n  </div>\n  <div class=\"user-controls\">\n    <button (click)=\"logout()\">Logout</button>\n  </div>\n</nav>\n<router-outlet></router-outlet>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}