{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n    this.user$$ = new BehaviorSubject(null);\n    this.user$ = this.user$$.asObservable();\n    this.authenticate();\n  }\n  authenticate() {\n    const user = localStorage.getItem('user');\n    if (user) {\n      this.user$$.next(JSON.parse(user));\n    }\n  }\n  login() {\n    const user = {\n      name: 'Pesho'\n    };\n    this.user$$.next(user);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n  logout() {\n    this.user$$.next(null);\n    localStorage.removeItem('user');\n    this.router.navigate(['/login']);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAoB,MAAM;;;AAGlD,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAH1B,KAAAC,MAAM,GAAgC,IAAIJ,eAAe,CAAa,IAAI,CAAC;IAC3E,KAAAK,KAAK,GAA2B,IAAI,CAACD,MAAM,CAACE,YAAY,EAAE;IAGxD,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACV,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIF,IAAI,EAAE;MACR,IAAI,CAACJ,MAAM,CAACO,IAAI,CAACC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAAC;;EAEtC;EAEAM,KAAKA,CAAA;IACH,MAAMN,IAAI,GAAG;MAAEO,IAAI,EAAE;IAAO,CAAE;IAC9B,IAAI,CAACX,MAAM,CAACO,IAAI,CAACH,IAAI,CAAC;IACtBC,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACT,IAAI,CAAC,CAAC;EACpD;EAEAU,MAAMA,CAAA;IACJ,IAAI,CAACd,MAAM,CAACO,IAAI,CAAC,IAAI,CAAC;IACtBF,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;;AAzBWnB,WAAW;mBAAXA,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAXvB,WAAW;SAAXA,WAAW;EAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;EAAAC,UAAA,EADE;AAAM","names":["BehaviorSubject","AuthService","constructor","router","user$$","user$","asObservable","authenticate","user","localStorage","getItem","next","JSON","parse","login","name","setItem","stringify","logout","removeItem","navigate","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sourceRoot":"","sources":["/Users/alexkostov/dev/fmiJS/javascript-frameworks-2023/week14/lecture/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  user$$: BehaviorSubject<any | null> = new BehaviorSubject<any | null>(null);\n  user$: Observable<any | null> = this.user$$.asObservable();\n\n  constructor(private router: Router) {\n    this.authenticate();\n  }\n\n  authenticate(): void {\n    const user = localStorage.getItem('user');\n    if (user) {\n      this.user$$.next(JSON.parse(user));\n    }\n  }\n\n  login(): void {\n    const user = { name: 'Pesho' };\n    this.user$$.next(user);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  logout(): void {\n    this.user$$.next(null);\n    localStorage.removeItem('user');\n    this.router.navigate(['/login']);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}